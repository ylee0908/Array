def subarraySum(self, nums: List[int], k: int) -> int:
        count = 0
        sums = 0
        d = dict()
        d[0] = 1
        for i in range(len(nums)):
            sums += nums[i]
            count += d.get(sums-k, 0)
            d[sums] = d.get(sums, 0) + 1
        return count
        
def subarraySum(nums, k):
        count = 0
        sums = 0
        d = dict()
        d[0] = 1
        
        for i in range(len(nums)):
            sums += nums[i]
            key = sums - k
            if key in d:
                count += d[key] 
            
            if sums not in d:
                d[sums] = 1
            else:
                d[sums] += 1
        return count
