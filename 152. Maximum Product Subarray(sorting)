https://leetcode.com/problems/maximum-product-subarray/

Given an integer array nums, find the contiguous subarray within an array (containing at least one number) 
which has the largest product.

Example 1:

Input: [2,3,-2,4]
Output: 6
Explanation: [2,3] has the largest product 6.


def maxProduct(nums):
    maximum=big=small=nums[0]
    for n in nums[1:]:
        big, small=max(n, n*big, n*small), min(n, n*big, n*small)
        maximum=max(maximum, big)
    return maximum
    
    
def maxProduct(self, nums: List[int]) -> int:
        if len(nums) == 0: return -1
        total_max = cur_max = cur_min = nums[0]
        for i in range(1, len(nums)):
            temp = cur_max
            cur_max = max(cur_max* nums[i], cur_min * nums[i], nums[i])
            cur_min = min(temp * nums[i], cur_min * nums[i], nums[i])
            
            if cur_max > total_max:
                total_max = cur_max
            return total_max
