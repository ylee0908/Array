https://leetcode.com/problems/rotate-array/

#reversal algorithm, time O(n), space O(1)
def rotate(nums, k):
	"""
	Do not return anything, modify nums in-place instead.
	"""
	s = 0
	e = len(nums) -1
	reverse(nums, s, e)
	reverse(nums, s, k - 1)
	reverse(nums, k, e)

	return nums
  
def reverse(nums, s, e):
	while s < e:
		nums[s], nums[e] = nums[e], nums[s]
		s, e = s + 1, e - 1


#time optimised O(n), space O(n)
def rotate(nums, k):
	res = [0} * len(nums)       
        for i in range(len(nums)):
            if (i+k) < len(nums):
                res[i+k] = nums[i]
            else:
                new_index = (i+k) % len(nums)
                res[new_index] = nums[i]

        return res

#Time: O(n^2), space: O(1)        
def rotate(nums, k):
		for i in range(k):
			prev = nums[-1]
			for j in range(len(nums)):
				nums[j], prev = prev, nums[j]
		return nums
